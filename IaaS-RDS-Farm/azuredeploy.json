{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "existingResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Existing Resource Group that contains the Virtual Network"
      }
    },
    "existingVNETName": {
      "type": "string",
      "metadata": {
        "description": "Existing VNET that contains the domain controller"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Existing subnet that contains the domain controller"
      }
    },
    "existingDomainName": {
      "type": "string",
      "metadata": {
        "description": "Existing subnet that contains the domain controller"
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'administrator"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and the domain"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "defaultValue": "pip-RDS",
      "metadata": {
        "description": "Public IP Name"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview"
      ],
      "metadata": {
        "description": "Windows server SKU"
      }

    },
    "numberOfRdshInstances": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of RDSH instances"
      }
    },
    "RDSHNamePrefix": {
      "type": "string",
      "defaultValue": "RDSH",
      "metadata": {
        "description": "The size of the RDSH VMs"
      }
    },
    "RDSHSize": {
      "type": "string",
      "defaultValue": "Standard_D2",
      "metadata": {
        "description": "The size of the RDSH VMs"
      }
    },
    "RDWAName": {
      "type": "string",
      "defaultValue": "RDWA",
      "metadata": {
        "description": "Name of the Network Scurity Group for the "
      }
    },
    "RDWASize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "The size of the RDWA VM"
      }
    },
    "RDCBName": {
      "type": "string",
      "defaultValue": "RDCB",
      "metadata": {
        "description": "Name of the Network Scurity Group for the "
      }
    },
    "RDCBSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "The size of the RDWA VM"
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'rds', 'storage')]",
    "storageAccountType": "Standard_LRS",

    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]",

    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",

    "vnetID": "[resourceId(parameters('existingResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('existingVNETName'))]",
    "subnetId": "[concat(variables('vnetID'),'/subnets/', parameters('existingSubnetName'))]",

    "RDWAVMName": "[concat ('vm-', parameters('RDWAName'))]",
    "RDWANsgName": "[concat ('nsg-', parameters('RDWAName'))]",
    "RDWANicName": "[concat ('nic-', parameters('RDWAName'))]",
    "RDWAOSDiskName": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('RDWAName'), '-osdisk.vhd')]",

    "RDCBVMName": "[concat ('vm-', parameters('RDCBName'))]",
    "RDCBNicName": "[concat ('nic-', parameters('RDCBName'))]",
    "RDCBOSDiskName": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('RDCBName'), '-osdisk.vhd')]",

    "RDSHVMName": "[concat ('vm-', parameters('RDSHNamePrefix'))]",
    "RDSHNicName": "[concat ('nic-', parameters('RDSHNamePrefix'))]",

    "assetLocation": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/rds-deployment/",
    "DSCUrl": "[concat(variables('assetLocation'),'/ConfigureRDS.ps1.zip')]",
    "DSCFunctionRDSH": "ConfigureRDS.ps1\\ConfigureRDSH",
    "DSCFunctionRDWA": "ConfigureRDS.ps1\\ConfigureRDWA",
    "DSCFunctionRDS": "ConfigureRDS.ps1\\ConfigureRDS"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('RDWANsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "description": "Allows RDP traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "description": "Allows RDP traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }

        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('RDWANicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups', variables('RDWANsgName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('RDWANsgName'))]"
              },
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('RDCBNicName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat ('nic-', parameters('RDSHNamePrefix'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "rdsh-nic-loop",
        "count": "[parameters('numberOfRdshInstances')]"
      },

      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('RDWAVMName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('RDWANicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('RDWASize')]"
        },
        "osProfile": {
          "computerName": "[parameters('RDWAName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[variables('RDWAOSDiskName')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('RDWANicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "[variables('apiVersion')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('RDWAVMName'),'/ConfigureRDWA')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines/', variables('RDWAVMName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.11",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[variables('DSCUrl')]",
              "ConfigurationFunction": "[variables('DSCFunctionRDWA')]",
              "Properties": {
                "DomainName": "[parameters('existingDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('RDCBVMName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('RDCBNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('RDCBSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('RDCBName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[variables('RDCBOSDiskName')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('RDCBNicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('RDSHVMName') , copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "rdsh-vm-loop",
        "count": "[parameters('numberOfRdshInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'nic-', parameters('RDSHNamePrefix'), copyindex())]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('RDSHSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('RDSHNamePrefix') , copyindex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('RDSHNamePrefix'), copyindex(), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat( variables('RDSHNicName'), copyindex()))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "[variables('apiVersion')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('RDSHVMName') , copyindex() ,'/ConfigureRDSH')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('RDSHVMName') , copyindex())]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.11",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[variables('DSCUrl')]",
              "ConfigurationFunction": "[variables('DSCFunctionRDSH')]",
              "Properties": {
                "DomainName": "[parameters('existingDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('RDCBVMName'),'/ConfigureRDS')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('RDWAVMName'))]",
        "rdsh-vm-loop"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.11",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[variables('DSCUrl')]",
          "ConfigurationFunction": "[variables('DSCFunctionRDS')]",
          "Properties": {
            "domainName": "[parameters('existingDomainName')]",
            "adminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "PrivateSettingsRef:adminPassword"
            },
            "connectionBroker": "[concat(parameters('RDCBName'), '.', parameters('existingDomainName'))]",
            "webAccessServer": "[concat(parameters('RDWAName'), '.', parameters('existingDomainName'))]",
            "externalfqdn": "[reference(parameters('publicIPAddressName')).dnsSettings.fqdn]",
            "sessionHostNamingPrefix": "[parameters('RDSHNamePrefix')]",
            "numberOfRdshInstances": "[parameters('numberOfRdshInstances')]"
          }
        },
        "protectedSettings": {
          "Items": {
            "adminPassword": "[parameters('adminPassword')]"
          }
        }
      }
    }
  ]
}